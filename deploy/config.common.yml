project_name: StoryMapJS
service_name: "{{ project_name|lower }}"
gitdeploy_version: "1.0.6"
python_version: "3.10.2"
python: /home/apps/sites/StoryMapJS.{{ python_version }}/.venv/bin/python
service_port: "{{ storymap_port }}"
nginx_template: storymap.conf
nginx_client_max_body_size: 20M

playbooks:
  - playbook.deploy.yml
  - playbook.huey.yml
  - playbook.restart.yml

# these will be merged with deployment-specific env into variable init_env
init_env_common:
  PROJECT_NAME: "{{ project_name }}"
  APPLICATION_DOMAINS: "{{ domains }}" # space-delimited
  STORYMAPJS_DIRECTORY: "{{ deploy_dir }}"
  STATIC_URL: "/static"

  # Flask specific
  FLASK_SECRET_KEY: "{{ vault_flask_secret_key }}"
  FLASK_SETTINGS_MODULE: "storymap.core.settings"
  FLASK_SETTINGS_FILE: "core/settings.py"
  AWS_STORAGE_BUCKET_NAME: "{{ vault_aws_storage_bucket_name }}"
  AWS_STORAGE_BUCKET_URL: "{{ vault_aws_storage_bucket_url }}"
  AWS_STORAGE_BUCKET_KEY: "{{ vault_aws_storage_bucket_key }}"
  AWS_ACCESS_KEY_ID: "{{ vault_aws_access_key_id }}"
  AWS_SECRET_ACCESS_KEY: "{{ vault_aws_secret_access_key }}"
  GOOGLE_CLIENT_ID: "{{ vault_google_client_id }}"
  GOOGLE_CLIENT_SECRET: "{{ vault_google_client_secret }}"
  ADMINS: "{{ vault_admins | join(' ') }}"
  ALLOWED_IDS: "{{ vault_allowed_ids }}"
  PG_HOST: "{{ vault_pg_host }}"
  PG_PORT: "{{ vault_pg_port }}"
  PG_NAME: "{{ vault_pg_name }}"
  PG_USER: "{{ vault_pg_user }}"
  PG_PASSWORD: "{{ vault_pg_password }}"

install_root: "/home/apps/sites"

# We are experimenting with using a project-name symlink to a python-versioned
# deployment location to facilitate virtualenv builds for python upgrades. Ideally,
# this means git-deploy would support these concepts orthogonally without resorting to
# using the application_dir in lieu of the deploy_dir as a path to the environment.
# For now, since the application dir happens to be the root of the repository, it
# seems like this will work, but we may want to re-think some of these variables in
# git-deploy. We may also want to introduce the symlinking as a deployment feature.

deploy_dir: "{{ install_root }}/{{ project_name }}.{{ python_version }}"
application_dir: "{{ install_root }}/{{ project_name }}" # This actually a symlink not managed by git-deploy
env_file: "{{ application_dir }}/.env"
envrc_file: "{{ application_dir }}/.envrc"
virtualenv: "{{ application_dir }}/.venv"
project_repo: "git@github.com:NUKnightLab/{{ project_name }}.git"
requirements_file: "{{ application_dir }}/requirements.txt"
wsgi_application: "storymap.core.wsgi:application"
